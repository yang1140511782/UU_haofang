// pages/entrust/entrust.js
var app = getApp();
var api = require('../../utils/common.js');

Page({

  /**
   * 页面的初始数据
   */
  data: {
    initLocalStorageUrl: app.buildRequestUrl('initLocalStorage'),
    publishFlow: 1,//当前流程值
    editFlow: 1,//当前编辑流程值
    slidWidth: "",//移动滑块背景底盒子总长度
    areaRange: [0, 50, 70, 100, 150, 200, 999999],//面积区间
    priceRange: [],//价格区间
    marginLeft: 0,//面积标题
    pMarginLeft: 0,//价格标题

    chooseBuildFlag: false,//选择 区域/小区
    searchLoupanBox: false,// 楼盘搜索弹框显示
    searchInputValue: '',// 搜索框的值
    buildArr: [],
    buildListLoc: [], //定位推荐的小区
    buildId:'', //楼盘id
    buildName:'', //楼盘名称
    buildRegion:'', //楼盘所在区域id
    buildRegName:'', //楼盘所在区域名称


    areaMoveViewX: 150,//面积滑块x的值
    priceMoveViewX: 100,//价格滑块x的值
    areaMoveViewXNew: 150,//面积滑块x的实时记录值
    priceMoveViewXNew: 100,//价格滑块x的实时记录值

    areaMoveChoose: '90-110㎡',//面积区间初始值
    princeMoveChoose: '',//价格区间初始值
    regIndexId: '',//当前选中的行政区的所在行数
    houseRegion: '',//行政区id
    regionName: '',//行政区名字
    houseSection: '',//商圈ID(片区id)
    sectionName: '',//商圈名称(片区名称)
    houseUseage: '',//用途:1住宅、2别墅、3商铺、4写字楼
    houseFitment: '',//装修:7装修不限、6豪装、3精装、2简装、1毛坯
    roomL: '',//几室-区间最小值
    roomH: '',//几室-区间最大值
    priceUnit: '',//价格-单位
    priceL: '',//价格-区间最小值
    priceH: '',//价格-区间最大值
    areaL: '',//面积[最小]
    areaH: '',//面积[最大]
    wfSex: '0',//经纪人性别，0:随机分配、1:男、2:女
    wfFee: '',//佣金比例
    descp: '',//C端客户留言信

    specialOper: '',//1:从房源详情点击的委托、0:其他业务、后续可能还会增加
    wfRelateId: '',//房源详情的ID
    resource: '',//房源来源

    cityId: app.globalData.cityId,
    wxId: app.globalData.userId,
    caseType: '3',//委托类型（3:求购、4:求租）
    youyouUserId: '',//优优用户ID
    mustpay: '',//是否必须支付（1是、0否、2资金账户还能够满足发布意向金委托）

    isHelp: '0',//是否需要经纪人帮助填写信息-专属委托时候才需要填写，默认:0,需要:1
    isVip: '0',//是否是专属委托，0:否、1:是
    youjiaFlag: '0',//委托登记来源：2微店1优家公众号、0优优好房。默认：0

    //专属经纪人信息:
    vipUserInfo: {
      archiveId: '',
      userName: '',
      userPhoto: '',
      userMobile: '',
      buyMoney: '',
      rentMoney: '',
      serviceRegs: '',
    },

    //我的购房需求:
    needsList: {
      'needsSection': { needsFlow: 1, needsName3: '期望区域', needsName4: '期望区域', needsValue: '', defaultTips: '请选择区域' },
      'needsType': { needsFlow: 2, needsName3: '房屋类型', needsName4: '房屋类型', needsValue: '' },

      'needsArea': { needsFlow: 5, needsName3: '理想面积', needsName4: '理想面积', needsValue: '', defaultTips: '请选择面积' },
      'needsPrice': { needsFlow: 6, needsName3: '购房预算', needsName4: '租房预算', needsValue: '', defaultTips: '请选择价格' },
      'needsFee': { needsFlow: 7, needsName3: '支付中介费', needsName4: '支付中介费', needsValue: '', defaultTips: '请选择中介费' },
      'needsBroker': { needsFlow: 7, needsName3: '服务经纪人', needsName4: '服务经纪人', needsValue: '', defaultTips: '男女均可' },
    },

    //当前选中的商圈数组
    sectionSelectArr: [''],//默认选中不限
    sectionSelectNameArr: [''],//当前选中商圈名字

    //主要流程值 publishFlow
    publishFlowMap: {
      '1': 'region-box',//期望区域筛选
      '2': 'useage-box',//房屋类型筛选
      '3': 'fitment-box',//房屋装修筛选
      '4': 'room-box',//房屋户型筛选
      '5': 'area-box',//理想面积筛选
      '6': 'price-box',//购房预算筛选
      '7': 'broker-sex-box',//挑选经纪人性别
      '8': 'fee-box',//购房佣金筛选
    },
    //房屋用途数组:
    useageMap: [
      { id: 1, name: "住宅", default: 1 },
      { id: 2, name: "别墅" },
      { id: 3, name: "商铺" },
    ],
    //房屋装修数组:
    fitmentMap: [
      { id: '2', name: '简装' },
      { id: '3', name: '精装', default: 1 },
      { id: '6', name: '豪装' },
      { id: '1', name: '毛坯' },
      { id: '7', name: '不限' },
    ],
    //房屋户型数组:
    roomMap: [
      { roomL: '1', roomH: '1', name: '一室' },
      { roomL: '2', roomH: '2', name: '二室' },
      { roomL: '3', roomH: '3', name: '三室', default: 1 },
      { roomL: '4', roomH: '4', name: '四室' },
      { roomL: '5', roomH: '5', name: '五室' },
      { roomL: '5', roomH: '20', name: '五室以上' },
    ],
    //佣金比例数组:
    feeMap: {
      3: [{ fee: '0.01|0.015', name: '1-1.5', unit: '%' }, { fee: '0.015|0.02', name: '1.5-2', unit: '%' }],//求购
      4: [{ fee: '0|0.5', name: '10-15', unit: '天' }, { fee: '0.5|1', name: '15-20', unit: '天' }],//求租
    },
    //性别数组 0:随机分配、1:男、2:女
    sexMap: [
      { id: 1, name: "帅哥", image: "https://uuweb.haofang.net/PublicC/images/publish/index/sex-man.png" },
      { id: 2, name: "美女", image: "https://uuweb.haofang.net/PublicC/images/publish/index/sex-woman.png" },
    ],
    //原始的行政区数据
    regData: [

    ],
    businessList: [],//商圈数据
    regList: {},
    indexSectionList: [
      // ['致民路',11]
    ],
    regionToastShow: false,//区域toast提示弹窗
    sectionBoxShow: true,      //商圈显示
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var _this = this;
    //设置初始参量
    var caseType = options.caseType ? options.caseType : 3;//默认为求购类型
    var editFlow = options.editFlow ? options.editFlow : 1;//编辑流程
    _this.setData({ caseType: caseType });

    //获取设备屏幕信息
    wx.getSystemInfo({
      success: function (res) {
        var winWidth = res.windowWidth;
        var slidingBlockWidth = winWidth - 16;
        _this.setData({
          slidWidth: slidingBlockWidth
        })
      }
    });

    //设置编辑默认值
    var editDataStr = wx.getStorageSync('publishEntrustData');//取缓存
    if (!!editDataStr) {
      var editData = JSON.parse(editDataStr);
      //设置面积和价格滑块的 偏移量 X
      editData.areaMoveViewX = editData.areaMoveViewXNew;
      editData.priceMoveViewX = editData.priceMoveViewXNew;

      //专属委托单独设置默认值
      if (editData.isVip == 1) {

        if (editData.editFlow == 2) {//房屋类型
          editData.roomH = 3;
          editData.roomL = 3;
          editData.houseFitment = 4;
        } else if (editData.editFlow == 5) {//面积区间
          if (!editData.areaL) editData.areaL = editData.areaRange[3] - 10;
          if (!editData.areaH) editData.areaH = editData.areaRange[3] + 10;
          if (!editData.areaMoveChoose) editData.areaMoveChoose = '90-110㎡';
        } else if (editData.editFlow == 6) {//预算
          var _priceUnit = caseType == 3 ? '万' : '元';
          if (!editData.priceL) editData.priceL = caseType == 3 ? (editData.priceRange[2] - 10) : (editData.priceRange[2] - 100);
          if (!editData.priceH) editData.priceH = caseType == 3 ? (editData.priceRange[2] + 10) : (editData.priceRange[2] + 100);
          if (!editData.princeMoveChoose) editData.princeMoveChoose = editData.priceL + '-' + editData.priceH + _priceUnit;
        } else if (editData.editFlow == 7) {//佣金

        }
      }else if(editData.specialOper == '1'){
        //群发找好房(详情页群发找好房)
        if(editData.houseRegion == ''){
          //如果当前未选中行政区,则不显示商圈
          editData.sectionBoxShow = false;
        }
        //计算获取regIndexId
        var regIndexId = 1;
        var regData = editData.regData;
        regData.forEach(function(item,k){
          if(item.REG_ID == editData.houseRegion){
            regIndexId = parseInt(k/3)+1;
          }
        });
        editData.regIndexId = regIndexId;
        editData.indexSectionList = editData.businessList[editData.houseRegion];

      }

      _this.setData(editData);

    }

  },
  /**
   * 请求处理行政区数据 和 价格/面积区间
   */
  formatRegData: function (resStr) {
    var _this = this;
    var res = JSON.parse(resStr);
    var _caseType = _this.data.caseType;//求租，求购状态
    //判断是求购/求购的时候，定义价格区间数组取值，及初始区间
    var _priceStr = _caseType == 3 ? res.DATA.BUY_PRICE_DATA : res.DATA.RENT_PRICE_DATA;
    var _priceUnit = _caseType == 3 ? '万' : '元';
    var _priceArr = (_priceStr).split(",");
    var _newPriceArr = [];
    for (var i = 0; i < _priceArr.length; i++) {
      if (_newPriceArr.indexOf(Number(_priceArr[i])) == -1) {
        _newPriceArr.push(Number(_priceArr[i]))
      } else {
        return
      }
    }
    _newPriceArr.unshift(0);
    _newPriceArr.push(999999);
    var priceL = _caseType == 3 ? (_newPriceArr[2] - 10) : (_newPriceArr[2] - 100);
    var priceH = _caseType == 3 ? (_newPriceArr[2] + 10) : (_newPriceArr[2] + 100);
    var princeMoveChoose = priceL + '-' + priceH + _priceUnit;


    _this.setData({
      priceRange: _newPriceArr,
      princeMoveChoose: princeMoveChoose,
      priceUnit: _priceUnit,
      priceL: priceL,
      priceH: priceH,
      areaL: (_this.data.areaRange[3] - 10),
      areaH: (_this.data.areaRange[3] + 10)
    });


    //初始化区域数据
    var regData = res.DATA.REG_DATA;

    var regLiArr = [];
    var regList = {};
    for (var i = 0; i < regData.length; i++) {
      var regListIndex = parseInt(i / 4);
      regData[i]['index'] = regListIndex + 1;
      if (regLiArr.length == 4) {
        regList[regListIndex] = regLiArr;
        regLiArr = [];
      }
      regLiArr.push(regData[i]);
      if (i + 1 == regData.length && regLiArr.length > 0) {
        //最后一个
        regList[regListIndex + 1] = regLiArr;
      }
    };
    //初始化商圈列表
    var businessData = res.DATA.SECTION_DATA;
    for (var i in businessData) {
      businessData[i].unshift(['不限', '']);
    };

    _this.setData({
      regList: regList,
      businessList: businessData,
    });
  },

  /**
   * 点击行政区
   */
  regTap: function (e) {
    var index = e.currentTarget.dataset.index;
    var regId = e.currentTarget.dataset.id;
    var regName = e.currentTarget.dataset.name;
    console.log(regId)
    var indexSectionData = this.data.businessList[regId];//获取当前行政区商圈列表
    if (!indexSectionData) {
      indexSectionData = [["不限", ""]]
    }
    if (regId == this.data.houseRegion) {
      //如果点击的是当前选中的行政区
      var sectionBoxShow = this.data.sectionBoxShow;
      this.setData({ sectionBoxShow: !sectionBoxShow });
      return;
    } else {

      this.setData({
        sectionBoxShow: true,
        houseRegion: regId,
        regionName: regName,
        houseSection: '',
        sectionName: '不限',
        sectionSelectArr: [''],//当前选中商圈数组清空
        sectionSelectNameArr: ['不限'],//当前选中商圈数组清空
        indexSectionList: indexSectionData,
        regIndexId: index,//切换当前显示第几行的商圈块
      });
    }

  },
  /**
   * 点击选中商圈
   */
  sectionTap: function (e) {
    var selectArr = this.data.sectionSelectArr;
    var selectNameArr = this.data.sectionSelectNameArr;
    var id = e.currentTarget.dataset.id;
    var name = e.currentTarget.dataset.name;
    if (id == '') {
      selectArr = [''];//选中的是不限
      selectNameArr = ['不限'];//选中的是不限
    } else {
      if (selectArr.indexOf(id) > -1) {
        //当前选中,则移除当前选中中状态
        selectArr.splice(selectArr.indexOf(id), 1);
        selectNameArr.splice(selectNameArr.indexOf(name), 1);
      } else {
        if (selectArr.indexOf('') > -1) {
          selectArr.splice(selectArr.indexOf(''), 1);//如果当前选中项里有不限,移除他
          selectNameArr.splice(selectNameArr.indexOf('不限'), 1);//如果当前选中项里有不限,移除他
        }
        if (selectArr.length >= 3) { selectArr.shift(); }
        if (selectNameArr.length >= 3) { selectNameArr.shift(); }
        selectArr.push(id);
        selectNameArr.push(name);
      }
    }
    var selectArrStr = selectArr.join(',');
    var selectNameArrStr = selectNameArr.join(',');
    this.setData({
      houseSection: selectArrStr,
      sectionSelectArr: selectArr,
      sectionSelectNameArr: selectNameArr,
      sectionName: selectNameArrStr,
    });
  },

  /**
   * 选择房屋类型
   */
  useageTap: function (e) {
    var id = e.currentTarget.dataset.id;
    this.setData({ houseUseage: id });
  },
  /**
   * 选择房屋装修
   */
  fitmentTap: function (e) {
    var id = e.currentTarget.dataset.id;
    this.setData({ houseFitment: id });
  },
  /**
   * 选择房屋户型
   */
  roomTap: function (e) {
    var roomL = e.currentTarget.dataset.rooml;
    var roomH = e.currentTarget.dataset.roomh;
    this.setData({ roomL: roomL, roomH: roomH });

  },
  /**
  * 选择佣金比例
  */
  feeTap: function (e) {
    var fee = e.currentTarget.dataset.fee;
    var name = e.currentTarget.dataset.name;
    this.setData({
      wfFee: fee,
      needsFee: name,
    });
  },
  /**
  * 留言输入
  */
  remarkInput: function (e) {
    var inputValue = e.detail.value;
    this.setData({ descp: inputValue });
  },
  /**
    * 经纪人性别选择
    */
  sexTap: function (e) {
    var id = e.currentTarget.dataset.id;
    var indexId = this.data.wfSex;
    if (id == indexId) { id = 0 };
    this.setData({ wfSex: id });
  },

  /**
   * 根据id在map数组中获取名字
   */
  getNameByIdFromMap: function (id, map) {
    var returnName = '';
    map.forEach(function (item) {
      if (item.id == id) { returnName = item.name }
    });
    return returnName;
  },
  /**
   * 根据roomH在map数组中获取户型名字
   */
  getNameByRoomHFromMap: function (roomH, map) {
    var returnName = '';
    map.forEach(function (item) {
      if (item.roomH == roomH) { returnName = item.name }
    });
    return returnName;
  },

  /*
  * nextTap:点击 编辑的 下一步 
  */
  editNextTap: function (e) {
    var _this = this;
    var indexFlow = this.data.editFlow;

    var nextFlow = indexFlow + 1;
    if (indexFlow == 1 && this.data.houseRegion == '') {
      //没有选择区域时需要提示
      this.setData({ regionToastShow: true });
      setTimeout(function () { _this.setData({ regionToastShow: false }) }, 1000);
      return;
    }

    if (indexFlow == 3 && this.data.houseUseage == '3') {
      //当前流程为装修, 如果 之前房屋类型为 商铺:3,则 选择装修时就直接是确定(跳过 户型)
      nextFlow += 1;
    }
    //更新我的购房需求显示字段
    this.updataNeedsList(nextFlow);
    this.setData({ editFlow: nextFlow });//切换当前显示第几行的商圈块
  },
  /*
  * nextTap:点击 编辑的 确定 
  */
  editSubmitTap: function (e) {

    //更新我的购房需求显示字段
    var _data = this.data;
    var nextFlow = this.data.editFlow + 1;
    this.setData({ editFlow: nextFlow });//切换当前显示第几行的商圈块
    if (nextFlow == 2) {//单独处理编辑区域的情况
      //期望区域
      var needsSection = _data.regionName + "(" + _data.sectionName + ")";
      var needsList = _data.needsList;
      //如果是选择的小区 
    if(!!_data.chooseBuildFlag){
      needsSection = _data.buildName;
    }
    var needsName4 = !_data.chooseBuildFlag?"期望区域":"指定小区";
    var needsName3 = !_data.chooseBuildFlag?"期望区域":"指定小区";
    
    needsList['needsSection']['needsValue'] = needsSection;
    needsList['needsSection']['needsName3'] = needsName3;
    needsList['needsSection']['needsName4'] = needsName4;
      this.setData({ needsList: needsList });
    } else {
      this.updataNeedsList(nextFlow);
    }
    //设置更新委托数据缓存
    var _data = this.data;
    var storageData = JSON.stringify(_data);
    wx.setStorageSync('publishEntrustData', storageData);
    //返回 发布委托页面
    wx.navigateBack();
  },

  /**
  * 更新我的购房需求显示字段
  */
  updataNeedsList: function (indexFlow) {
    var _data = this.data;
    var needsList = _data.needsList;

    //期望区域
    var needsSection = _data.regionName + "(" + _data.sectionName + ")";
    //如果是选择的小区 
    if(!!_data.chooseBuildFlag){
      needsSection = _data.buildName;
    }
    var needsName4 = !_data.chooseBuildFlag?"期望区域":"指定小区";
    var needsName3 = !_data.chooseBuildFlag?"期望区域":"指定小区";
    
    needsList['needsSection']['needsValue'] = needsSection;
    needsList['needsSection']['needsName3'] = needsName3;
    needsList['needsSection']['needsName4'] = needsName4;

    //房屋类型
    var needsType = '';
    var houseUseage = this.getNameByIdFromMap(_data.houseUseage, _data.useageMap);
    var houseFitment = this.getNameByIdFromMap(_data.houseFitment, _data.fitmentMap);
    var houseRoom = this.getNameByRoomHFromMap(_data.roomH, _data.roomMap);

 
    
    //房屋类型字段区分 : 房屋类型为 商铺和写字楼 的情况
    if (_data.houseUseage == 3 || _data.houseUseage == 4) {
      if (!!houseFitment) {
        needsType = houseUseage + "-" + houseFitment;
      } else {
        needsType = houseUseage;
      }

    } else {
      if (!!houseFitment && !!houseRoom) {
        needsType = houseUseage + "-" + houseFitment + "-" + houseRoom;
      } else if (!!houseFitment) {
        needsType = houseUseage + "-" + houseFitment;

        needsType = houseUseage;
      } else if (!!houseRoom) {
        needsType = houseUseage + "-" + houseRoom;
      } else {
        needsType = houseUseage;
      }
    }

   
    //理想面积 
    var needsArea = _data.areaMoveChoose;
    if (needsArea) {
      needsList['needsArea']['needsValue'] = needsArea;
    }
    //购房预算
    var needsPrice = _data.princeMoveChoose;
    if (needsPrice) {
      needsList['needsPrice']['needsValue'] = needsPrice;
    }
    //支付中介费
    var needsFee = _data.needsFee;
    if (needsFee) {
      needsList['needsFee']['needsValue'] = needsFee;
    }

    //服务经纪人
    var wfSex = _data.wfSex;
    var needsBroker = '男女均可';
    if (wfSex == 1) {
      var needsBroker = '帅哥';
    } else if (wfSex == 2) {
      var needsBroker = '美女';
    }

    //专属委托这里显示经纪人姓名
    if(this.data.isVip == 1){needsBroker = this.data.vipUserInfo.userName;};
    needsList['needsBroker']['needsValue'] = needsBroker;

    this.setData({ needsList: needsList });
  },


  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  },
  /**
   * 面积滑块拖拽
   */
  dragAreaMoveBtn: function (e) {
    var _this = this;
    var scollWidth = _this.data.slidWidth,//外层盒子宽度
      areaP = _this.data.areaRange;
    //设置偏移量
    var areaMoveViewXNew = e.changedTouches[0].clientX - 35;
    _this.setData({ areaMoveViewXNew: areaMoveViewXNew });

    var _clientX = e.changedTouches[0].clientX - 8;
    if (_clientX >= 280) {
      _this.setData({ marginLeft: 20 })
    }
    if (_clientX < 280) {
      _this.setData({ marginLeft: 0 })
    }
    _this.calculateCurrentArea(_clientX, scollWidth, areaP)
  },
  /**
  * 价格滑块拖拽
  */
  dragPrinceMoveBtn: function (e) {
    var _this = this;
    var scollWidth = _this.data.slidWidth,
      princeP = _this.data.priceRange;
    //设置偏移量
    var priceMoveViewXNew = e.changedTouches[0].clientX - 35;
    _this.setData({ priceMoveViewXNew: priceMoveViewXNew });

    var _clientX = e.changedTouches[0].clientX - 8;
    if (_clientX >= 280) {
      _this.setData({ pMarginLeft: 20 })
    }
    if (_clientX < 280) {
      _this.setData({ pMarginLeft: 0 })
    }
    // console.log(_clientX)
    _this.calculateCurrentPrince(_clientX, scollWidth, princeP)
  },
  /**
 * 面积滑块当前的面积
 *  oLeft 距离左边的值
 *  scrollLength 滑槽总长度
 *  priceRange 价格范围
 * */
  calculateCurrentArea: function (oLeft, scrollLength, priceRange) {
    var _this = this;
    var priceStart, priceEnd, priceStr;//定义起始值
    var percent = oLeft * 6 / scrollLength;
    var index = parseInt(percent);//当前索引值
    percent = percent - index;//所在区间占比
    if (index == 0) {
      priceStart = 0, priceEnd = priceRange[1];
      priceStr = priceEnd + '㎡以下';
      _this.setData({
        areaMoveChoose: priceStr
      })
    } else if (index >= 5) {
      priceStart = priceEnd = priceRange[5], priceEnd = priceRange[6];
      priceStr = priceStart + '㎡以上';
      _this.setData({
        areaMoveChoose: priceStr
      })
    } else {
      var divide = priceRange[index + 1] - priceRange[index];//区间价格跨度
      priceStart = priceRange[index] + parseInt(divide * percent);
      //起始值向下取整
      priceStart = parseInt(priceStart / 10) * 10;
      //结束值 = 起始值 + 区间值 * 0.3
      priceEnd = parseInt(priceStart + divide * 0.3);
      //结束值向上取整
      priceEnd = parseInt((priceEnd + 10) / 10) * 10;
      //显示值
      priceStr = priceStart + '-' + priceEnd + '㎡';
      _this.setData({
        areaL: priceStart,
        areaH: priceEnd,
        areaMoveChoose: priceStr
      })
    }
  },
  /**
* 价格滑块当前的价格
*  oLeft 距离左边的值
*  scrollLength 滑槽总长度
*  priceRange 价格范围
* */
  calculateCurrentPrince: function (oLeft, scrollLength, priceRange) {
    var _this = this;
    var priceStart, priceEnd, priceStr;//定义起始值
    var percent = oLeft * 6 / scrollLength;
    var index = parseInt(percent);//当前索引值
    percent = percent - index;//所在区间占比
    var priceUnitCn = _this.data.caseType == 3 ? '万' : '元';
    if (index == 0) {
      priceStart = 0, priceEnd = priceRange[1];
      priceStr = priceEnd + priceUnitCn + '以下';
      _this.setData({
        princeMoveChoose: priceStr
      })
    } else if (index >= 5) {
      priceStart = priceEnd = priceRange[5], priceEnd = priceRange[6];
      priceStr = priceStart + priceUnitCn + '以上';
      _this.setData({
        princeMoveChoose: priceStr
      })
    } else {
      var divide = priceRange[index + 1] - priceRange[index];//区间价格跨度
      if (_this.data.caseType == 3) {
        priceStart = priceRange[index] + parseInt(divide * percent);
        //起始值向下取整
        priceStart = parseInt(priceStart / 10) * 10;
        //结束值 = 起始值 + 区间值 * 0.3
        priceEnd = parseInt(priceStart + divide * 0.3);
        //结束值向上取整
        priceEnd = parseInt((priceEnd + 10) / 10) * 10;

      } else {
        priceStart = priceRange[index] + parseInt(divide * percent);
        //起始值向下取整
        priceStart = parseInt(priceStart / 100) * 100;
        //结束值 = 起始值 + 区间值 * 0.3
        priceEnd = parseInt(priceStart + divide * 0.3);
        //结束值向上取整
        priceEnd = parseInt((priceEnd + 100) / 100) * 100;
      }
      //显示值
      priceStr = priceStart + '-' + priceEnd + priceUnitCn;
      _this.setData({
        priceL: priceStart,
        priceH: priceEnd,
        princeMoveChoose: priceStr
      })
    }
  },
  /***** 楼盘检索相关 *****/
  /**
       * 弹出搜索框
       */
  buildSearchBompEvent: function (e) {
    var _this = this;
    this.setData({ searchLoupanBox: true })
  },
  /**
     * 取消弹框
     */
  searchCancleEvent: function (e) {
    var _this = this;
    _this.setData({
      searchLoupanBox: false,
      searchInputValue: ''
    })
  },
  /**
     * 搜索输入框赋值
     */
  searchInputEvent: function (e) {
    var _this = this;
    var value = e.detail.value;
    _this.setData({
      searchInputValue: value
    })
  },
  /**
    * 删除搜索关键字
  */
  deleteKedEvent: function (e) {
    var _this = this;
    _this.setData({
      searchInputValue: '',
      buildArr: []
    });
  },
  /**
    * 删除搜索关键字
  */
  searchBuildData: function (e) {
    var kwd = e.detail.value;
    var that = this;
    if (!!kwd) {
      wx.request({
        url: app.buildRequestUrl('getBuildByKeyWord'),
        data: {
          cityId: this.data.cityId,
          caseType: this.data.caseType==3?1:2,
          keyWord: kwd
        },
        success: function (res) {
          var dataArr = res.data.DATA.list;
          if (res.statusCode == 200 && dataArr.length > 0) {
            if (dataArr.length > 0) {
              var buildArr = [];
              for (var i = 0; i < dataArr.length; i++) {
                var data = dataArr[i];
                buildArr.push(data);
              }
              that.setData({ buildArr: buildArr });
            }
          }
        }
      })
    }
  },
  //选择某个小区
  listTap: function (e) {
    var buildName = e.currentTarget.dataset.text;
    var buildId = e.currentTarget.dataset.id;
    var buildRegion = e.currentTarget.dataset.buildregion;
    var buildRegName = e.currentTarget.dataset.regname;
    this.setData({
      buildName: buildName,
      buildId: buildId,
      buildRegion: buildRegion,
      buildRegName: buildRegName,
      searchLoupanBox: false,
      searchInputValue: ''
    })
  },
  /**
   * 切换  区域和小区选择
   */
  changeBuildArea:function(){
    this.setData({chooseBuildFlag:!this.data.chooseBuildFlag})
  }

})